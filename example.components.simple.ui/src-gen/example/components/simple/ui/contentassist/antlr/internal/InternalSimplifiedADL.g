/*
* generated by Xtext
*/
grammar InternalSimplifiedADL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package example.components.simple.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package example.components.simple.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import example.components.simple.services.SimplifiedADLGrammarAccess;

}

@parser::members {
 
 	private SimplifiedADLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SimplifiedADLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImports
entryRuleImports 
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportsAccess().getGroup()); }
(rule__Imports__Group__0)
{ after(grammarAccess.getImportsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArchitecture
entryRuleArchitecture 
:
{ before(grammarAccess.getArchitectureRule()); }
	 ruleArchitecture
{ after(grammarAccess.getArchitectureRule()); } 
	 EOF 
;

// Rule Architecture
ruleArchitecture
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArchitectureAccess().getGroup()); }
(rule__Architecture__Group__0)
{ after(grammarAccess.getArchitectureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredInterface
entryRuleRequiredInterface 
:
{ before(grammarAccess.getRequiredInterfaceRule()); }
	 ruleRequiredInterface
{ after(grammarAccess.getRequiredInterfaceRule()); } 
	 EOF 
;

// Rule RequiredInterface
ruleRequiredInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getGroup()); }
(rule__RequiredInterface__Group__0)
{ after(grammarAccess.getRequiredInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvidedInterface
entryRuleProvidedInterface 
:
{ before(grammarAccess.getProvidedInterfaceRule()); }
	 ruleProvidedInterface
{ after(grammarAccess.getProvidedInterfaceRule()); } 
	 EOF 
;

// Rule ProvidedInterface
ruleProvidedInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getGroup()); }
(rule__ProvidedInterface__Group__0)
{ after(grammarAccess.getProvidedInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinding
entryRuleBinding 
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingAccess().getGroup()); }
(rule__Binding__Group__0)
{ after(grammarAccess.getBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Architecture__ElementsAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getElementsComponentParserRuleCall_3_0_0()); }
	ruleComponent
{ after(grammarAccess.getArchitectureAccess().getElementsComponentParserRuleCall_3_0_0()); }
)

    |(
{ before(grammarAccess.getArchitectureAccess().getElementsProvidedInterfaceParserRuleCall_3_0_1()); }
	ruleProvidedInterface
{ after(grammarAccess.getArchitectureAccess().getElementsProvidedInterfaceParserRuleCall_3_0_1()); }
)

    |(
{ before(grammarAccess.getArchitectureAccess().getElementsRequiredInterfaceParserRuleCall_3_0_2()); }
	ruleRequiredInterface
{ after(grammarAccess.getArchitectureAccess().getElementsRequiredInterfaceParserRuleCall_3_0_2()); }
)

    |(
{ before(grammarAccess.getArchitectureAccess().getElementsBindingParserRuleCall_3_0_3()); }
	ruleBinding
{ after(grammarAccess.getArchitectureAccess().getElementsBindingParserRuleCall_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getImportsAssignment_0()); }
(rule__Definition__ImportsAssignment_0)*
{ after(grammarAccess.getDefinitionAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArchitectureAssignment_1()); }
(rule__Definition__ArchitectureAssignment_1)
{ after(grammarAccess.getDefinitionAccess().getArchitectureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Imports__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportsAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__1__Impl
	rule__Imports__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
(rule__Imports__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportsAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Architecture__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__0__Impl
	rule__Architecture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getComponentKeyword_0()); }

	'component' 

{ after(grammarAccess.getArchitectureAccess().getComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__1__Impl
	rule__Architecture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getNameAssignment_1()); }
(rule__Architecture__NameAssignment_1)
{ after(grammarAccess.getArchitectureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__2__Impl
	rule__Architecture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__3__Impl
	rule__Architecture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getElementsAssignment_3()); }
(rule__Architecture__ElementsAssignment_3)*
{ after(grammarAccess.getArchitectureAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Architecture__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RequiredInterface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredInterface__Group__0__Impl
	rule__RequiredInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getRequiresKeyword_0()); }

	'requires' 

{ after(grammarAccess.getRequiredInterfaceAccess().getRequiresKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredInterface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredInterface__Group__1__Impl
	rule__RequiredInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getTypeAssignment_1()); }
(rule__RequiredInterface__TypeAssignment_1)
{ after(grammarAccess.getRequiredInterfaceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredInterface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredInterface__Group__2__Impl
	rule__RequiredInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getRequiredInterfaceAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredInterface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredInterface__Group__3__Impl
	rule__RequiredInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getNameAssignment_3()); }
(rule__RequiredInterface__NameAssignment_3)
{ after(grammarAccess.getRequiredInterfaceAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredInterface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredInterface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getRequiredInterfaceAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProvidedInterface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedInterface__Group__0__Impl
	rule__ProvidedInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getProvidesKeyword_0()); }

	'provides' 

{ after(grammarAccess.getProvidedInterfaceAccess().getProvidesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedInterface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedInterface__Group__1__Impl
	rule__ProvidedInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getTypeAssignment_1()); }
(rule__ProvidedInterface__TypeAssignment_1)
{ after(grammarAccess.getProvidedInterfaceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedInterface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedInterface__Group__2__Impl
	rule__ProvidedInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getProvidedInterfaceAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedInterface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedInterface__Group__3__Impl
	rule__ProvidedInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getNameAssignment_3()); }
(rule__ProvidedInterface__NameAssignment_3)
{ after(grammarAccess.getProvidedInterfaceAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedInterface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedInterface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getProvidedInterfaceAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getContainsKeyword_0()); }

	'contains' 

{ after(grammarAccess.getComponentAccess().getContainsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getTypeAssignment_1()); }
(rule__Component__TypeAssignment_1)
{ after(grammarAccess.getComponentAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getComponentAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_3()); }
(rule__Component__NameAssignment_3)
{ after(grammarAccess.getComponentAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getComponentAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Binding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getBindsKeyword_0()); }

	'binds' 

{ after(grammarAccess.getBindingAccess().getBindsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getSourceComponentAssignment_1()); }
(rule__Binding__SourceComponentAssignment_1)
{ after(grammarAccess.getBindingAccess().getSourceComponentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__2__Impl
	rule__Binding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getBindingAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__3__Impl
	rule__Binding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getSourceInterfaceAssignment_3()); }
(rule__Binding__SourceInterfaceAssignment_3)
{ after(grammarAccess.getBindingAccess().getSourceInterfaceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__4__Impl
	rule__Binding__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getToKeyword_4()); }

	'to' 

{ after(grammarAccess.getBindingAccess().getToKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__5__Impl
	rule__Binding__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getTargetComponentAssignment_5()); }
(rule__Binding__TargetComponentAssignment_5)
{ after(grammarAccess.getBindingAccess().getTargetComponentAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__6__Impl
	rule__Binding__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getFullStopKeyword_6()); }

	'.' 

{ after(grammarAccess.getBindingAccess().getFullStopKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__7__Impl
	rule__Binding__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getTargetInterfaceAssignment_7()); }
(rule__Binding__TargetInterfaceAssignment_7)
{ after(grammarAccess.getBindingAccess().getTargetInterfaceAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getBindingAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Definition__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getImportsImportsParserRuleCall_0_0()); }
	ruleImports{ after(grammarAccess.getDefinitionAccess().getImportsImportsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArchitectureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArchitectureArchitectureParserRuleCall_1_0()); }
	ruleArchitecture{ after(grammarAccess.getDefinitionAccess().getArchitectureArchitectureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getArchitectureAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchitectureAccess().getElementsAlternatives_3_0()); }
(rule__Architecture__ElementsAlternatives_3_0)
{ after(grammarAccess.getArchitectureAccess().getElementsAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getTypeInterfaceDefinitionCrossReference_1_0()); }
(
{ before(grammarAccess.getRequiredInterfaceAccess().getTypeInterfaceDefinitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRequiredInterfaceAccess().getTypeInterfaceDefinitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRequiredInterfaceAccess().getTypeInterfaceDefinitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredInterface__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRequiredInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getTypeInterfaceDefinitionCrossReference_1_0()); }
(
{ before(grammarAccess.getProvidedInterfaceAccess().getTypeInterfaceDefinitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProvidedInterfaceAccess().getTypeInterfaceDefinitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getProvidedInterfaceAccess().getTypeInterfaceDefinitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedInterface__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getProvidedInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getTypeArchitectureCrossReference_1_0()); }
(
{ before(grammarAccess.getComponentAccess().getTypeArchitectureQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getComponentAccess().getTypeArchitectureQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getTypeArchitectureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__SourceComponentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getSourceComponentComponentCrossReference_1_0()); }
(
{ before(grammarAccess.getBindingAccess().getSourceComponentComponentIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getSourceComponentComponentIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getSourceComponentComponentCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__SourceInterfaceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getSourceInterfaceRequiredInterfaceCrossReference_3_0()); }
(
{ before(grammarAccess.getBindingAccess().getSourceInterfaceRequiredInterfaceIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getSourceInterfaceRequiredInterfaceIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getSourceInterfaceRequiredInterfaceCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__TargetComponentAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getTargetComponentComponentCrossReference_5_0()); }
(
{ before(grammarAccess.getBindingAccess().getTargetComponentComponentIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getTargetComponentComponentIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getTargetComponentComponentCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__TargetInterfaceAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getTargetInterfaceProvidedInterfaceCrossReference_7_0()); }
(
{ before(grammarAccess.getBindingAccess().getTargetInterfaceProvidedInterfaceIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getTargetInterfaceProvidedInterfaceIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getTargetInterfaceProvidedInterfaceCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


